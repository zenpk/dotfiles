{
  "window.restoreWindows": "none",
  "window.zoomLevel": 1,
  "window.commandCenter": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "security.workspace.trust.untrustedFiles": "open",
  "security.workspace.trust.enabled": false,
  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 3000,

  "git.ignoreRebaseWarning": true,
  "git.enableSmartCommit": true,
  "git.mergeEditor": false,
  "diffEditor.ignoreTrimWhitespace": false,

  "terminal.integrated.profiles.windows": {
    // integrate pwsh and GitBash into terminal
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "GitBash": {
      "source": "Git Bash",
      "icon": "terminal-bash"
    },
    "pwsh": {
      // pwsh core
      "icon": "terminal-powershell",
      "path": "Windows.Terminal.PowershellCore"
    }
  },
  "terminal.integrated.defaultProfile.windows": "pwsh",

  "editor.acceptSuggestionOnEnter": "off",
  "editor.tabCompletion": "on",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.largeFileOptimizations": false,
  "editor.minimap.enabled": false,
  "editor.mouseWheelZoom": false,
  "editor.bracketPairColorization.enabled": false,
  "editor.wordWrap": "off", // auto next line when exceeds the screen
  "editor.fontFamily": "'JetBrainsMonoNL Nerd Font Mono', 'JetBrains Mono', Menlo, Consolas, 'Noto Sans SC', monospace",
  "editor.fontLigatures": false, // convert -> to arrow etc.
  "editor.fontSize": 13,
  "editor.lineHeight": 22,
  "editor.linkedEditing": true,
  "editor.formatOnSave": false,
  "editor.lineNumbers": "relative",
  "editor.cursorSurroundingLines": 10, // workaround for vim scrolloff
  "editor.semanticHighlighting.enabled": true,

  "workbench.colorTheme": "JetMind",
  "workbench.startupEditor": "none",
  "workbench.editor.enablePreview": false,
  "workbench.editor.showTabs": "single",
  "workbench.tree.indent": 16, // make the explorer indent more
  "workbench.iconTheme": "material-icon-theme",
  "workbench.layoutControl.enabled": false,
  "debug.console.fontSize": 13,
  "terminal.integrated.fontSize": 13,
  "markdown.preview.fontSize": 13,

  "extensions.ignoreRecommendations": true,
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  "settingsSync.keybindingsPerPlatform": false,
  "vim.vimrc.enable": true,
  "vim.useSystemClipboard": true,
  "vim.leader": " ",
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.camelCaseMotion.enable": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "o", "i"],
      "commands": ["editor.code.organizeImports"]
    },
    {
      "before": ["<leader>", "q", "f"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    // workaround for % not supporting HTML tags
    {
      "before": ["<leader>", "%"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    { "before": ["g", "i"], "commands": ["editor.action.goToImplementation"] },
    { "before": ["g", "r"], "commands": ["editor.action.goToReferences"] },
    { "before": ["[", "d"], "commands": ["editor.action.marker.previous"] },
    { "before": ["]", "d"], "commands": ["editor.action.marker.next"] },
    {
      // [g]enerate [p]rint
      "before": ["<leader>", "g", "p"],
      "commands": [
        {
          "command": "snippet-on-file-type.insertSnippetBasedOnFileType",
          "args": ["print"]
        }
      ]
    },
    {
      // [g]enerate [l]og
      "before": ["<leader>", "g", "l"],
      "commands": [
        {
          "command": "snippet-on-file-type.insertSnippetBasedOnFileType",
          "args": ["log"]
        }
      ]
    },
    {
      // [g]enerate [e]rror
      "before": ["<leader>", "g", "e"],
      "commands": [
        {
          "command": "snippet-on-file-type.insertSnippetBasedOnFileType",
          "args": ["error"]
        }
      ]
    },
    // disable weird undo/redo
    { "before": ["u"], "command": "editor.action.undo" },
    { "before": ["U"], "command": "editor.action.redo" }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "f"],
      "commands": ["editor.action.formatSelection"]
    }
  ],

  "snippet-on-file-type.defineSnippets": [
    {
      "fileTypes": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "vue"
      ],
      "snippets": {
        "print": "console.log($1);",
        "log": "console.log(`$1`, \"background: #1e1f22; color: #bcbec4\");",
        "error": "try {\n  $1\n} catch (e) {\n  console.log(e);\n}"
      }
    },
    {
      "fileTypes": ["go"],
      "snippets": {
        "print": "fmt.Println($1)\n",
        "log": "fmt.Println(\"========== $1 ==========\")",
        "error": "if err != nil {\n    return $1err\n}"
      }
    },
    {
      "fileTypes": ["python"],
      "snippets": {
        "print": "print($1)",
        "log": "print(\"========== $1 ==========\")"
      }
    }
  ],

  "gopls": {
    "ui.semanticTokens": true,
    "formatting.gofumpt": true
  },
  "go.toolsManagement.autoUpdate": true,
  "[go]": {
    "editor.defaultFormatter": "golang.go",
    "editor.formatOnSave": false
  },

  "cSpell.userWords": ["zenpk", "AUTOINCREMENT", "pwsh"],
  "cSpell.diagnosticLevel": "Hint",

  "remote.SSH.remotePlatform": {
    "vultr": "linux",
    "mac": "macOS",
    "my": "linux"
  },

  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.semanticTokenColorCustomizations": {
    "enabled": true
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": []
  }
}
