[
  // ctrl+p/n to prev and next
  {
    "key": "ctrl+p",
    "command": ""
  },
  {
    "key": "ctrl+n",
    "command": ""
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "quickInput.previous",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "history.showPrevious",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "history.showNext",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "focusPreviousRenameSuggestion",
    "when": "renameInputVisible"
  },
  {
    "key": "ctrl+n",
    "command": "focusNextRenameSuggestion",
    "when": "renameInputVisible"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.selectPreviousStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.selectNextStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  // disable annoying weirdos
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  // Windows
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+left",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  // make search usable
  {
    "key": "escape",
    "command": "search.action.focusSearchList",
    "when": "searchViewletVisible && searchInputBoxFocus"
  },
  {
    "key": "ctrl+e",
    "command": ""
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.quickOpen"
  },
  // Mac
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // too much mistype
  {
    "key": "ctrl+enter",
    "command": "-refactorPreview.apply",
    "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
  },
  {
    "key": "space",
    "command": "-refactorPreview.toggleCheckedState",
    "when": "listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.compareEditor.swapSides"
  },
  // replace NeoVim <C-d> <C-u>
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "up",
            "by": "wrappedLine",
            "value": 14
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "viewPortCenter" }
        }
      ]
    }
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "down",
            "by": "wrappedLine",
            "value": 14
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "viewPortCenter" }
        }
      ]
    }
  }
]
